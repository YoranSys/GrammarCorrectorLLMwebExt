(()=>{"use strict";var e,t,o,r,i={},s={};function n(e){var t=s[e];if(void 0!==t)return t.exports;var o=s[e]={exports:{}};return i[e](o,o.exports,n),o.exports}n.m=i,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,n.t=function(o,r){if(1&r&&(o=this(o)),8&r)return o;if("object"==typeof o&&o){if(4&r&&o.__esModule)return o;if(16&r&&"function"==typeof o.then)return o}var i=Object.create(null);n.r(i);var s={};e=e||[null,t({}),t([]),t(t)];for(var a=2&r&&o;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach((e=>s[e]=()=>o[e]));return s.default=()=>o,n.d(i,s),i},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,o)=>(n.f[o](e,t),t)),[])),n.u=e=>e+".mistralai-client.js",n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o={},r="mistral-client-bundle:",n.l=(e,t,i,s)=>{if(o[e])o[e].push(t);else{var a,l;if(void 0!==i)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var d=u[c];if(d.getAttribute("src")==e||d.getAttribute("data-webpack")==r+i){a=d;break}}a||(l=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,n.nc&&a.setAttribute("nonce",n.nc),a.setAttribute("data-webpack",r+i),a.src=e),o[e]=[t];var p=(t,r)=>{a.onerror=a.onload=null,clearTimeout(m);var i=o[e];if(delete o[e],a.parentNode&&a.parentNode.removeChild(a),i&&i.forEach((e=>e(r))),t)return t(r)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=p.bind(null,a.onerror),a.onload=p.bind(null,a.onload),l&&document.head.appendChild(a)}},n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e={792:0};n.f.j=(t,o)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)o.push(r[2]);else{var i=new Promise(((o,i)=>r=e[t]=[o,i]));o.push(r[2]=i);var s=n.p+n.u(t),a=new Error;n.l(s,(o=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var i=o&&("load"===o.type?"missing":o.type),s=o&&o.target&&o.target.src;a.message="Loading chunk "+t+" failed.\n("+i+": "+s+")",a.name="ChunkLoadError",a.type=i,a.request=s,r[1](a)}}),"chunk-"+t,t)}};var t=(t,o)=>{var r,i,[s,a,l]=o,u=0;if(s.some((t=>0!==e[t]))){for(r in a)n.o(a,r)&&(n.m[r]=a[r]);l&&l(n)}for(t&&t(o);u<s.length;u++)i=s[u],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0},o=self.webpackChunkmistral_client_bundle=self.webpackChunkmistral_client_bundle||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})();const a=class{constructor(e){this.client=e}async create({file:e,purpose:t="fine-tune"}){const o=new FormData;return o.append("file",e),o.append("purpose",t),await this.client._request("post","v1/files",null,void 0,o)}async retrieve({fileId:e}){return await this.client._request("get",`v1/files/${e}`)}async list(){return await this.client._request("get","v1/files")}async delete({fileId:e}){return await this.client._request("delete",`v1/files/${e}`)}},l=class{constructor(e){this.client=e}async create({model:e,trainingFiles:t,validationFiles:o=[],hyperparameters:r={training_steps:1800,learning_rate:1e-4},suffix:i=null,integrations:s=null}){return await this.client._request("post","v1/fine_tuning/jobs",{model:e,training_files:t,validation_files:o,hyperparameters:r,suffix:i,integrations:s})}async retrieve({jobId:e}){return await this.client._request("get",`v1/fine_tuning/jobs/${e}`,{})}async list(){return await this.client._request("get","v1/fine_tuning/jobs",{})}async cancel({jobId:e}){return await this.client._request("post",`v1/fine_tuning/jobs/${e}/cancel`,{})}},u=[429,500,502,503,504],c=Promise.resolve(globalThis.fetch??n.e(92).then(n.t.bind(n,92,19)).then((e=>e.default)));class d extends Error{constructor(e){super(e),this.name="MistralAPIError"}}function p(e){const t=new AbortController;return e.forEach((e=>{e&&(e.addEventListener("abort",(()=>{t.abort(e.reason)}),{once:!0}),e.aborted&&t.abort(e.reason))})),t.signal}const m=class{constructor(e=process.env.MISTRAL_API_KEY,t="https://api.mistral.ai",o=5,r=120){this.endpoint=t,this.apiKey=e,this.maxRetries=o,this.timeout=r,this.endpoint.indexOf("inference.azure.com")&&(this.modelDefault="mistral"),this.files=new a(this),this.jobs=new l(this)}async _fetch(...e){return(await c)(...e)}_request=async function(e,t,o,r,i=null){const s=`${this.endpoint}/${t}`,n={method:e,headers:{"User-Agent":"mistral-client-js/0.5.0",Accept:o?.stream?"text/event-stream":"application/json","Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},signal:p([AbortSignal.timeout(1e3*this.timeout),r]),body:"get"!==e?i??JSON.stringify(o):null,timeout:1e3*this.timeout};i&&delete n.headers["Content-Type"];for(let e=0;e<this.maxRetries;e++)try{const t=await this._fetch(s,n);if(t.ok){if(o?.stream){if(void 0===t.body.getReader)return t.body;{const e=t.body.getReader();return async function*(){try{for(;;){const{done:t,value:o}=await e.read();if(t)return;yield o}}finally{e.releaseLock()}}()}}return await t.json()}if(!u.includes(t.status))throw new d(`HTTP error! status: ${t.status} Response: \n${await t.text()}`);console.debug(`Retrying request on response status: ${t.status}`,`Response: ${await t.text()}`,`Attempt: ${e+1}`),await new Promise((t=>setTimeout(t,500*Math.pow(2,e+1))))}catch(t){if(console.error(`Request failed: ${t.message}`),"MistralAPIError"===t.name)throw t;if(e===this.maxRetries-1)throw t;await new Promise((t=>setTimeout(t,500*Math.pow(2,e+1))))}throw new Error("Max retries reached")};_makeChatCompletionRequest=function(e,t,o,r,i,s,n,a,l,u,c,p){if(!e&&!this.modelDefault)throw new d("You must provide a model name");return{model:e??this.modelDefault,messages:t,tools:o??void 0,temperature:r??void 0,max_tokens:i??void 0,top_p:s??void 0,random_seed:n??void 0,stream:a??void 0,safe_prompt:(l||u)??void 0,tool_choice:c??void 0,response_format:p??void 0}};_makeCompletionRequest=function(e,t,o,r,i,s,n,a,l){if(!e&&!this.modelDefault)throw new d("You must provide a model name");return{model:e??this.modelDefault,prompt:t,suffix:o??void 0,temperature:r??void 0,max_tokens:i??void 0,top_p:s??void 0,random_seed:n??void 0,stop:a??void 0,stream:l??void 0}};listModels=async function(){return await this._request("get","v1/models")};chat=async function({model:e,messages:t,tools:o,temperature:r,maxTokens:i,topP:s,randomSeed:n,safeMode:a,safePrompt:l,toolChoice:u,responseFormat:c},{signal:d}={}){const p=this._makeChatCompletionRequest(e,t,o,r,i,s,n,!1,a,l,u,c);return await this._request("post","v1/chat/completions",p,d)};chatStream=async function*({model:e,messages:t,tools:o,temperature:r,maxTokens:i,topP:s,randomSeed:n,safeMode:a,safePrompt:l,toolChoice:u,responseFormat:c},{signal:d}={}){const p=this._makeChatCompletionRequest(e,t,o,r,i,s,n,!0,a,l,u,c),m=await this._request("post","v1/chat/completions",p,d);let f="";const h=new TextDecoder;for await(const e of m){let t;for(f+=h.decode(e,{stream:!0});-1!==(t=f.indexOf("\n"));){const e=f.substring(0,t);if(f=f.substring(t+1),e.startsWith("data:")){const t=e.substring(6).trim();"[DONE]"!==t&&(yield JSON.parse(t))}}}};embeddings=async function({model:e,input:t}){const o={model:e,input:t};return await this._request("post","v1/embeddings",o)};completion=async function({model:e,prompt:t,suffix:o,temperature:r,maxTokens:i,topP:s,randomSeed:n,stop:a},{signal:l}={}){const u=this._makeCompletionRequest(e,t,o,r,i,s,n,a,!1);return await this._request("post","v1/fim/completions",u,l)};completionStream=async function*({model:e,prompt:t,suffix:o,temperature:r,maxTokens:i,topP:s,randomSeed:n,stop:a},{signal:l}={}){const u=this._makeCompletionRequest(e,t,o,r,i,s,n,a,!0),c=await this._request("post","v1/fim/completions",u,l);let d="";const p=new TextDecoder;for await(const e of c){let t;for(d+=p.decode(e,{stream:!0});-1!==(t=d.indexOf("\n"));){const e=d.substring(0,t);if(d=d.substring(t+1),e.startsWith("data:")){const t=e.substring(6).trim();"[DONE]"!==t&&(yield JSON.parse(t))}}}}};console.log("MistralAI imported:",m),window.MistralClient=m})();